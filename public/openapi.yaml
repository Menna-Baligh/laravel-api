openapi: 3.0.3
info:
  title: 'Laravel API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
tags:
  -
    name: Endpoints
    description: ''
paths:
  /api/posts:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    title: mama
                    slug: my-post
                    content: mona
                    likes: 11
                    created_at: '2025-08-14T19:38:20.000000Z'
                    updated_at: '2025-08-16T21:19:27.000000Z'
                  -
                    id: 4
                    title: 'second post'
                    slug: my-sec-post
                    content: hello
                    likes: 2
                    created_at: '2025-08-14T21:21:32.000000Z'
                    updated_at: '2025-08-14T21:21:32.000000Z'
                  -
                    id: 5
                    title: tala
                    slug: toto-post
                    content: null
                    likes: 20
                    created_at: '2025-08-14T23:21:21.000000Z'
                    updated_at: '2025-08-14T23:21:21.000000Z'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - title
                - slug
      security: []
  '/api/posts/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: mama
                  slug: my-post
                  content: mona
                  likes: 11
                  created_at: '2025-08-14T19:38:20.000000Z'
                  updated_at: '2025-08-16T21:19:27.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: mama
                  slug:
                    type: string
                    example: my-post
                  content:
                    type: string
                    example: mona
                  likes:
                    type: integer
                    example: 11
                  created_at:
                    type: string
                    example: '2025-08-14T19:38:20.000000Z'
                  updated_at:
                    type: string
                    example: '2025-08-16T21:19:27.000000Z'
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: true
                slug:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                likes:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/posts/search/{title}':
    get:
      summary: ''
      operationId: getApiPostsSearchTitle
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: title
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/verify-email/{id}/{hash}':
    get:
      summary: "Mark the authenticated user's email address as verified."
      operationId: markTheAuthenticatedUsersEmailAddressAsVerified
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the verify email.'
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  /api/email/verification-notification:
    post:
      summary: 'Send a new email verification notification.'
      operationId: sendANewEmailVerificationNotification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/logout:
    post:
      summary: 'Destroy an authenticated session.'
      operationId: destroyAnAuthenticatedSession
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/register:
    post:
      summary: 'Handle an incoming registration request.'
      operationId: handleAnIncomingRegistrationRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: kunde.eloisa@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  /api/login:
    post:
      summary: 'Handle an incoming authentication request.'
      operationId: handleAnIncomingAuthenticationRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: qkunze@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: 'O[2UZ5ij-e/dl4m{o,'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/forgot-password:
    post:
      summary: 'Handle an incoming password reset link request.'
      operationId: handleAnIncomingPasswordResetLinkRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: qkunze@example.com
                  nullable: false
              required:
                - email
      security: []
  /api/reset-password:
    post:
      summary: 'Handle an incoming new password request.'
      operationId: handleAnIncomingNewPasswordRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: carolyne.luettgen@example.org
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - token
                - email
                - password
      security: []
